name: Main Server Pull-request

on:
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code.   # Repo checkout
        uses: actions/checkout@v3

      - name: Check Node v            # Node v 확인
        run: node -v
        
      - name: Install dependencies    # 의존 파일 설치
        run: npm install

      - name: Set .env from secrets
        run: |
          echo "PORT=${{ secrets.ENV }}" > .env
      
      - name: Generate build          # React Build
        run: npm run build

      - name: Discordbot alert         # 디스코드 알림
        uses: sarisia/actions-status-discord@v1.13.0
        with:
            webhook: ${{ secrets.DISCORD_WEBHOOK }}
            content: ${{ (github.actor == 'marinesnow34' && '<@392607023495118862>') || 
              (github.actor == '1223v' && '<@368775981667844098>') ||
              (github.actor == 'KKangHHee' && '<@724893770771988532>') ||
              (github.actor == 'hhbb0081' && '<@739857755271200892>') }}
        if: always()
  
  after:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Comment on failure and close PR
        if: needs.build.result == 'failure'
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '빌드 실패'
            });
            
            github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              state: 'closed'
            });

      - name: Auto approve pull request
        if: needs.build.result == 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            });